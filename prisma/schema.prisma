// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["native", "debian-openssl-3.0.x"]
  // binaryTargets = "native"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type {
  TRANSLATION
  NEGATIVE
  INTERROGATIVE
  STORY
  AFFIRMATIVE
}

model Phrase {
  id         Int      @id @default(autoincrement())
  portuguese String   @unique
  english    String
  tags       String[]
  type       Type     @default(TRANSLATION)
  audio      Bytes?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

model Game {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Food {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  protein   Float
  fat       Float
  carbo     Float
  fiber     Float
  calorie   Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Diet      Diet[]
}

enum Meal {
  BREAKFAST
  LUNCH
  SNACK
  DINNER
}

model Diet {
  id       Int   @id @default(autoincrement())
  meal     Meal
  foodId   Int
  quantity Float

  food      Food     @relation(fields: [foodId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
